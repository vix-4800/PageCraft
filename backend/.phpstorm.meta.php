<?php
/* @noinspection ALL */
// @formatter:off
// phpcs:ignoreFile

namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Container\Container::makeWith(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::get(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::make(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::makeWith(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\app(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\resolve(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Psr\Container\ContainerInterface::get(0), map([
        '' => '@',
            'App\Services\DatabaseDumpers\DatabaseDumper' => \App\Services\DatabaseDumpers\MysqlDumper::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Auth\StatefulGuard' => \Illuminate\Auth\SessionGuard::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\LogBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'Laravel\Fortify\Contracts\CreatesNewUsers' => \App\Actions\Fortify\CreateNewUser::class,
            'Laravel\Fortify\Contracts\EmailVerificationNotificationSentResponse' => \Laravel\Fortify\Http\Responses\EmailVerificationNotificationSentResponse::class,
            'Laravel\Fortify\Contracts\FailedPasswordConfirmationResponse' => \Laravel\Fortify\Http\Responses\FailedPasswordConfirmationResponse::class,
            'Laravel\Fortify\Contracts\FailedTwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\FailedTwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\LockoutResponse' => \Laravel\Fortify\Http\Responses\LockoutResponse::class,
            'Laravel\Fortify\Contracts\LoginResponse' => \Laravel\Fortify\Http\Responses\LoginResponse::class,
            'Laravel\Fortify\Contracts\LogoutResponse' => \Laravel\Fortify\Http\Responses\LogoutResponse::class,
            'Laravel\Fortify\Contracts\PasswordConfirmedResponse' => \Laravel\Fortify\Http\Responses\PasswordConfirmedResponse::class,
            'Laravel\Fortify\Contracts\PasswordUpdateResponse' => \Laravel\Fortify\Http\Responses\PasswordUpdateResponse::class,
            'Laravel\Fortify\Contracts\ProfileInformationUpdatedResponse' => \Laravel\Fortify\Http\Responses\ProfileInformationUpdatedResponse::class,
            'Laravel\Fortify\Contracts\RecoveryCodesGeneratedResponse' => \Laravel\Fortify\Http\Responses\RecoveryCodesGeneratedResponse::class,
            'Laravel\Fortify\Contracts\RegisterResponse' => \Laravel\Fortify\Http\Responses\RegisterResponse::class,
            'Laravel\Fortify\Contracts\ResetsUserPasswords' => \App\Actions\Fortify\ResetUserPassword::class,
            'Laravel\Fortify\Contracts\TwoFactorAuthenticationProvider' => \Laravel\Fortify\TwoFactorAuthenticationProvider::class,
            'Laravel\Fortify\Contracts\TwoFactorConfirmedResponse' => \Laravel\Fortify\Http\Responses\TwoFactorConfirmedResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorDisabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorDisabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorEnabledResponse' => \Laravel\Fortify\Http\Responses\TwoFactorEnabledResponse::class,
            'Laravel\Fortify\Contracts\TwoFactorLoginResponse' => \Laravel\Fortify\Http\Responses\TwoFactorLoginResponse::class,
            'Laravel\Fortify\Contracts\UpdatesUserPasswords' => \App\Actions\Fortify\UpdateUserPassword::class,
            'Laravel\Fortify\Contracts\UpdatesUserProfileInformation' => \App\Actions\Fortify\UpdateUserProfileInformation::class,
            'Laravel\Fortify\Contracts\VerifyEmailResponse' => \Laravel\Fortify\Http\Responses\VerifyEmailResponse::class,
            'Laravel\Reverb\Contracts\ApplicationProvider' => \Laravel\Reverb\ConfigApplicationProvider::class,
            'Laravel\Socialite\Contracts\Factory' => \Laravel\Socialite\SocialiteManager::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'avatar' => \Laravolt\Avatar\Avatar::class,
            'avatar.generator' => \Laravolt\Avatar\Generator\DefaultGenerator::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'dompdf' => \Dompdf\Dompdf::class,
            'dompdf.wrapper' => \Barryvdh\DomPDF\PDF::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\RedisQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));

    override(\auth()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Contracts\Auth\Guard::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Auth::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\request()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Http\Request::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Request::user(), map([
        '' => \App\Models\User::class,
    ]));

    override(\config(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'string',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'string',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'NULL',
            'cache.stores.dynamodb.secret' => 'NULL',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'cors.paths' => 'string',
            'cors.allowed_methods' => 'string',
            'cors.allowed_origins' => 'string',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'string',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'NULL',
            'filesystems.disks.s3.secret' => 'NULL',
            'filesystems.disks.s3.region' => 'NULL',
            'filesystems.disks.s3.bucket' => 'NULL',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.links./var/www/html/public/storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'string',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'string',
            'laravolt.avatar.driver' => 'string',
            'laravolt.avatar.generator' => 'string',
            'laravolt.avatar.ascii' => 'boolean',
            'laravolt.avatar.shape' => 'string',
            'laravolt.avatar.width' => 'integer',
            'laravolt.avatar.height' => 'integer',
            'laravolt.avatar.chars' => 'integer',
            'laravolt.avatar.fontSize' => 'integer',
            'laravolt.avatar.uppercase' => 'boolean',
            'laravolt.avatar.rtl' => 'boolean',
            'laravolt.avatar.fonts' => 'string',
            'laravolt.avatar.foregrounds' => 'string',
            'laravolt.avatar.backgrounds' => 'string',
            'laravolt.avatar.border.size' => 'integer',
            'laravolt.avatar.border.color' => 'string',
            'laravolt.avatar.border.radius' => 'integer',
            'laravolt.avatar.theme' => 'string',
            'laravolt.avatar.themes.grayscale-light.backgrounds' => 'string',
            'laravolt.avatar.themes.grayscale-light.foregrounds' => 'string',
            'laravolt.avatar.themes.grayscale-dark.backgrounds' => 'string',
            'laravolt.avatar.themes.grayscale-dark.foregrounds' => 'string',
            'laravolt.avatar.themes.colorful.backgrounds' => 'string',
            'laravolt.avatar.themes.colorful.foregrounds' => 'string',
            'laravolt.avatar.themes.pastel.backgrounds' => 'string',
            'laravolt.avatar.themes.pastel.foregrounds' => 'string',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'string',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'string',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.stderr.processors' => 'string',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.encryption' => 'NULL',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'string',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'string',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'NULL',
            'queue.connections.sqs.secret' => 'NULL',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'string',
            'sanctum.guard' => 'string',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'scout.driver' => 'string',
            'scout.prefix' => 'string',
            'scout.queue' => 'boolean',
            'scout.after_commit' => 'boolean',
            'scout.chunk.searchable' => 'integer',
            'scout.chunk.unsearchable' => 'integer',
            'scout.soft_delete' => 'boolean',
            'scout.identify' => 'boolean',
            'scout.algolia.id' => 'string',
            'scout.algolia.secret' => 'string',
            'scout.meilisearch.host' => 'string',
            'scout.meilisearch.key' => 'string',
            'scout.meilisearch.index-settings.App\Models\Product.filterableAttributes' => 'string',
            'scout.meilisearch.index-settings.App\Models\Product.sortableAttributes' => 'string',
            'scout.typesense.client-settings.api_key' => 'string',
            'scout.typesense.client-settings.nodes.0.host' => 'string',
            'scout.typesense.client-settings.nodes.0.port' => 'string',
            'scout.typesense.client-settings.nodes.0.path' => 'string',
            'scout.typesense.client-settings.nodes.0.protocol' => 'string',
            'scout.typesense.client-settings.nearest_node.host' => 'string',
            'scout.typesense.client-settings.nearest_node.port' => 'string',
            'scout.typesense.client-settings.nearest_node.path' => 'string',
            'scout.typesense.client-settings.nearest_node.protocol' => 'string',
            'scout.typesense.client-settings.connection_timeout_seconds' => 'integer',
            'scout.typesense.client-settings.healthcheck_interval_seconds' => 'integer',
            'scout.typesense.client-settings.num_retries' => 'integer',
            'scout.typesense.client-settings.retry_interval_seconds' => 'integer',
            'scout.typesense.model-settings' => 'array',
            'services.postmark.token' => 'NULL',
            'services.ses.key' => 'NULL',
            'services.ses.secret' => 'NULL',
            'services.ses.region' => 'string',
            'services.resend.key' => 'NULL',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'services.github.client_id' => 'NULL',
            'services.github.client_secret' => 'NULL',
            'services.github.redirect' => 'NULL',
            'services.google.client_id' => 'NULL',
            'services.google.client_secret' => 'NULL',
            'services.google.redirect' => 'NULL',
            'services.sdek.client_id' => 'NULL',
            'services.sdek.client_secret' => 'NULL',
            'services.boxberry.token' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'string',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'string',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'string',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'string',
            'broadcasting.connections.reverb.secret' => 'string',
            'broadcasting.connections.reverb.app_id' => 'string',
            'broadcasting.connections.reverb.options.host' => 'string',
            'broadcasting.connections.reverb.options.port' => 'string',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'view.paths' => 'string',
            'view.compiled' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'dompdf.show_warnings' => 'boolean',
            'dompdf.public_path' => 'NULL',
            'dompdf.convert_entities' => 'boolean',
            'dompdf.options.font_dir' => 'string',
            'dompdf.options.font_cache' => 'string',
            'dompdf.options.temp_dir' => 'string',
            'dompdf.options.chroot' => 'string',
            'dompdf.options.allowed_protocols.data://.rules' => 'array',
            'dompdf.options.allowed_protocols.file://.rules' => 'array',
            'dompdf.options.allowed_protocols.http://.rules' => 'array',
            'dompdf.options.allowed_protocols.https://.rules' => 'array',
            'dompdf.options.artifactPathValidation' => 'NULL',
            'dompdf.options.log_output_file' => 'NULL',
            'dompdf.options.enable_font_subsetting' => 'boolean',
            'dompdf.options.pdf_backend' => 'string',
            'dompdf.options.default_media_type' => 'string',
            'dompdf.options.default_paper_size' => 'string',
            'dompdf.options.default_paper_orientation' => 'string',
            'dompdf.options.default_font' => 'string',
            'dompdf.options.dpi' => 'integer',
            'dompdf.options.enable_php' => 'boolean',
            'dompdf.options.enable_javascript' => 'boolean',
            'dompdf.options.enable_remote' => 'boolean',
            'dompdf.options.allowed_remote_hosts' => 'NULL',
            'dompdf.options.font_height_ratio' => 'double',
            'dompdf.options.enable_html5_parser' => 'boolean',
            'reverb.default' => 'string',
            'reverb.servers.reverb.host' => 'string',
            'reverb.servers.reverb.port' => 'integer',
            'reverb.servers.reverb.hostname' => 'string',
            'reverb.servers.reverb.options.tls' => 'array',
            'reverb.servers.reverb.max_request_size' => 'integer',
            'reverb.servers.reverb.scaling.enabled' => 'boolean',
            'reverb.servers.reverb.scaling.channel' => 'string',
            'reverb.servers.reverb.scaling.server.url' => 'NULL',
            'reverb.servers.reverb.scaling.server.host' => 'string',
            'reverb.servers.reverb.scaling.server.port' => 'string',
            'reverb.servers.reverb.scaling.server.username' => 'NULL',
            'reverb.servers.reverb.scaling.server.password' => 'NULL',
            'reverb.servers.reverb.scaling.server.database' => 'string',
            'reverb.servers.reverb.pulse_ingest_interval' => 'integer',
            'reverb.servers.reverb.telescope_ingest_interval' => 'integer',
            'reverb.apps.provider' => 'string',
            'reverb.apps.apps.0.key' => 'string',
            'reverb.apps.apps.0.secret' => 'string',
            'reverb.apps.apps.0.app_id' => 'string',
            'reverb.apps.apps.0.options.host' => 'string',
            'reverb.apps.apps.0.options.port' => 'string',
            'reverb.apps.apps.0.options.scheme' => 'string',
            'reverb.apps.apps.0.options.useTLS' => 'boolean',
            'reverb.apps.apps.0.allowed_origins' => 'string',
            'reverb.apps.apps.0.ping_interval' => 'integer',
            'reverb.apps.apps.0.activity_timeout' => 'integer',
            'reverb.apps.apps.0.max_message_size' => 'integer',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'string',
            'ide-helper.model_locations' => 'string',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'string',
            'ide-helper.extra.Session' => 'string',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'string',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'string',
        ]));
    override(\Illuminate\Config\Repository::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'string',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'string',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'NULL',
            'cache.stores.dynamodb.secret' => 'NULL',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'cors.paths' => 'string',
            'cors.allowed_methods' => 'string',
            'cors.allowed_origins' => 'string',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'string',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'NULL',
            'filesystems.disks.s3.secret' => 'NULL',
            'filesystems.disks.s3.region' => 'NULL',
            'filesystems.disks.s3.bucket' => 'NULL',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.links./var/www/html/public/storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'string',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'string',
            'laravolt.avatar.driver' => 'string',
            'laravolt.avatar.generator' => 'string',
            'laravolt.avatar.ascii' => 'boolean',
            'laravolt.avatar.shape' => 'string',
            'laravolt.avatar.width' => 'integer',
            'laravolt.avatar.height' => 'integer',
            'laravolt.avatar.chars' => 'integer',
            'laravolt.avatar.fontSize' => 'integer',
            'laravolt.avatar.uppercase' => 'boolean',
            'laravolt.avatar.rtl' => 'boolean',
            'laravolt.avatar.fonts' => 'string',
            'laravolt.avatar.foregrounds' => 'string',
            'laravolt.avatar.backgrounds' => 'string',
            'laravolt.avatar.border.size' => 'integer',
            'laravolt.avatar.border.color' => 'string',
            'laravolt.avatar.border.radius' => 'integer',
            'laravolt.avatar.theme' => 'string',
            'laravolt.avatar.themes.grayscale-light.backgrounds' => 'string',
            'laravolt.avatar.themes.grayscale-light.foregrounds' => 'string',
            'laravolt.avatar.themes.grayscale-dark.backgrounds' => 'string',
            'laravolt.avatar.themes.grayscale-dark.foregrounds' => 'string',
            'laravolt.avatar.themes.colorful.backgrounds' => 'string',
            'laravolt.avatar.themes.colorful.foregrounds' => 'string',
            'laravolt.avatar.themes.pastel.backgrounds' => 'string',
            'laravolt.avatar.themes.pastel.foregrounds' => 'string',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'string',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'string',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.stderr.processors' => 'string',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.encryption' => 'NULL',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'string',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'string',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'NULL',
            'queue.connections.sqs.secret' => 'NULL',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'string',
            'sanctum.guard' => 'string',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'scout.driver' => 'string',
            'scout.prefix' => 'string',
            'scout.queue' => 'boolean',
            'scout.after_commit' => 'boolean',
            'scout.chunk.searchable' => 'integer',
            'scout.chunk.unsearchable' => 'integer',
            'scout.soft_delete' => 'boolean',
            'scout.identify' => 'boolean',
            'scout.algolia.id' => 'string',
            'scout.algolia.secret' => 'string',
            'scout.meilisearch.host' => 'string',
            'scout.meilisearch.key' => 'string',
            'scout.meilisearch.index-settings.App\Models\Product.filterableAttributes' => 'string',
            'scout.meilisearch.index-settings.App\Models\Product.sortableAttributes' => 'string',
            'scout.typesense.client-settings.api_key' => 'string',
            'scout.typesense.client-settings.nodes.0.host' => 'string',
            'scout.typesense.client-settings.nodes.0.port' => 'string',
            'scout.typesense.client-settings.nodes.0.path' => 'string',
            'scout.typesense.client-settings.nodes.0.protocol' => 'string',
            'scout.typesense.client-settings.nearest_node.host' => 'string',
            'scout.typesense.client-settings.nearest_node.port' => 'string',
            'scout.typesense.client-settings.nearest_node.path' => 'string',
            'scout.typesense.client-settings.nearest_node.protocol' => 'string',
            'scout.typesense.client-settings.connection_timeout_seconds' => 'integer',
            'scout.typesense.client-settings.healthcheck_interval_seconds' => 'integer',
            'scout.typesense.client-settings.num_retries' => 'integer',
            'scout.typesense.client-settings.retry_interval_seconds' => 'integer',
            'scout.typesense.model-settings' => 'array',
            'services.postmark.token' => 'NULL',
            'services.ses.key' => 'NULL',
            'services.ses.secret' => 'NULL',
            'services.ses.region' => 'string',
            'services.resend.key' => 'NULL',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'services.github.client_id' => 'NULL',
            'services.github.client_secret' => 'NULL',
            'services.github.redirect' => 'NULL',
            'services.google.client_id' => 'NULL',
            'services.google.client_secret' => 'NULL',
            'services.google.redirect' => 'NULL',
            'services.sdek.client_id' => 'NULL',
            'services.sdek.client_secret' => 'NULL',
            'services.boxberry.token' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'string',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'string',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'string',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'string',
            'broadcasting.connections.reverb.secret' => 'string',
            'broadcasting.connections.reverb.app_id' => 'string',
            'broadcasting.connections.reverb.options.host' => 'string',
            'broadcasting.connections.reverb.options.port' => 'string',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'view.paths' => 'string',
            'view.compiled' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'dompdf.show_warnings' => 'boolean',
            'dompdf.public_path' => 'NULL',
            'dompdf.convert_entities' => 'boolean',
            'dompdf.options.font_dir' => 'string',
            'dompdf.options.font_cache' => 'string',
            'dompdf.options.temp_dir' => 'string',
            'dompdf.options.chroot' => 'string',
            'dompdf.options.allowed_protocols.data://.rules' => 'array',
            'dompdf.options.allowed_protocols.file://.rules' => 'array',
            'dompdf.options.allowed_protocols.http://.rules' => 'array',
            'dompdf.options.allowed_protocols.https://.rules' => 'array',
            'dompdf.options.artifactPathValidation' => 'NULL',
            'dompdf.options.log_output_file' => 'NULL',
            'dompdf.options.enable_font_subsetting' => 'boolean',
            'dompdf.options.pdf_backend' => 'string',
            'dompdf.options.default_media_type' => 'string',
            'dompdf.options.default_paper_size' => 'string',
            'dompdf.options.default_paper_orientation' => 'string',
            'dompdf.options.default_font' => 'string',
            'dompdf.options.dpi' => 'integer',
            'dompdf.options.enable_php' => 'boolean',
            'dompdf.options.enable_javascript' => 'boolean',
            'dompdf.options.enable_remote' => 'boolean',
            'dompdf.options.allowed_remote_hosts' => 'NULL',
            'dompdf.options.font_height_ratio' => 'double',
            'dompdf.options.enable_html5_parser' => 'boolean',
            'reverb.default' => 'string',
            'reverb.servers.reverb.host' => 'string',
            'reverb.servers.reverb.port' => 'integer',
            'reverb.servers.reverb.hostname' => 'string',
            'reverb.servers.reverb.options.tls' => 'array',
            'reverb.servers.reverb.max_request_size' => 'integer',
            'reverb.servers.reverb.scaling.enabled' => 'boolean',
            'reverb.servers.reverb.scaling.channel' => 'string',
            'reverb.servers.reverb.scaling.server.url' => 'NULL',
            'reverb.servers.reverb.scaling.server.host' => 'string',
            'reverb.servers.reverb.scaling.server.port' => 'string',
            'reverb.servers.reverb.scaling.server.username' => 'NULL',
            'reverb.servers.reverb.scaling.server.password' => 'NULL',
            'reverb.servers.reverb.scaling.server.database' => 'string',
            'reverb.servers.reverb.pulse_ingest_interval' => 'integer',
            'reverb.servers.reverb.telescope_ingest_interval' => 'integer',
            'reverb.apps.provider' => 'string',
            'reverb.apps.apps.0.key' => 'string',
            'reverb.apps.apps.0.secret' => 'string',
            'reverb.apps.apps.0.app_id' => 'string',
            'reverb.apps.apps.0.options.host' => 'string',
            'reverb.apps.apps.0.options.port' => 'string',
            'reverb.apps.apps.0.options.scheme' => 'string',
            'reverb.apps.apps.0.options.useTLS' => 'boolean',
            'reverb.apps.apps.0.allowed_origins' => 'string',
            'reverb.apps.apps.0.ping_interval' => 'integer',
            'reverb.apps.apps.0.activity_timeout' => 'integer',
            'reverb.apps.apps.0.max_message_size' => 'integer',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'string',
            'ide-helper.model_locations' => 'string',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'string',
            'ide-helper.extra.Session' => 'string',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'string',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'string',
        ]));
    override(\Illuminate\Support\Facades\Config::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.maintenance.store' => 'string',
            'app.providers' => 'string',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.database.lock_table' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.file.lock_path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'string',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'NULL',
            'cache.stores.dynamodb.secret' => 'NULL',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.prefix' => 'string',
            'cors.paths' => 'string',
            'cors.allowed_methods' => 'string',
            'cors.allowed_origins' => 'string',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'string',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.sqlite.busy_timeout' => 'NULL',
            'database.connections.sqlite.journal_mode' => 'NULL',
            'database.connections.sqlite.synchronous' => 'NULL',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.migrations.table' => 'string',
            'database.migrations.update_date_on_publish' => 'boolean',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.serve' => 'boolean',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'NULL',
            'filesystems.disks.s3.secret' => 'NULL',
            'filesystems.disks.s3.region' => 'NULL',
            'filesystems.disks.s3.bucket' => 'NULL',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.links./var/www/html/public/storage' => 'string',
            'fortify.guard' => 'string',
            'fortify.middleware' => 'string',
            'fortify.auth_middleware' => 'string',
            'fortify.passwords' => 'string',
            'fortify.username' => 'string',
            'fortify.email' => 'string',
            'fortify.views' => 'boolean',
            'fortify.home' => 'string',
            'fortify.prefix' => 'string',
            'fortify.domain' => 'NULL',
            'fortify.lowercase_usernames' => 'boolean',
            'fortify.limiters.login' => 'string',
            'fortify.limiters.two-factor' => 'string',
            'fortify.paths.login' => 'NULL',
            'fortify.paths.logout' => 'NULL',
            'fortify.paths.password.request' => 'NULL',
            'fortify.paths.password.reset' => 'NULL',
            'fortify.paths.password.email' => 'NULL',
            'fortify.paths.password.update' => 'NULL',
            'fortify.paths.password.confirm' => 'NULL',
            'fortify.paths.password.confirmation' => 'NULL',
            'fortify.paths.register' => 'NULL',
            'fortify.paths.verification.notice' => 'NULL',
            'fortify.paths.verification.verify' => 'NULL',
            'fortify.paths.verification.send' => 'NULL',
            'fortify.paths.user-profile-information.update' => 'NULL',
            'fortify.paths.user-password.update' => 'NULL',
            'fortify.paths.two-factor.login' => 'NULL',
            'fortify.paths.two-factor.enable' => 'NULL',
            'fortify.paths.two-factor.confirm' => 'NULL',
            'fortify.paths.two-factor.disable' => 'NULL',
            'fortify.paths.two-factor.qr-code' => 'NULL',
            'fortify.paths.two-factor.secret-key' => 'NULL',
            'fortify.paths.two-factor.recovery-codes' => 'NULL',
            'fortify.redirects.login' => 'NULL',
            'fortify.redirects.logout' => 'NULL',
            'fortify.redirects.password-confirmation' => 'NULL',
            'fortify.redirects.register' => 'NULL',
            'fortify.redirects.email-verification' => 'NULL',
            'fortify.redirects.password-reset' => 'NULL',
            'fortify.features' => 'string',
            'laravolt.avatar.driver' => 'string',
            'laravolt.avatar.generator' => 'string',
            'laravolt.avatar.ascii' => 'boolean',
            'laravolt.avatar.shape' => 'string',
            'laravolt.avatar.width' => 'integer',
            'laravolt.avatar.height' => 'integer',
            'laravolt.avatar.chars' => 'integer',
            'laravolt.avatar.fontSize' => 'integer',
            'laravolt.avatar.uppercase' => 'boolean',
            'laravolt.avatar.rtl' => 'boolean',
            'laravolt.avatar.fonts' => 'string',
            'laravolt.avatar.foregrounds' => 'string',
            'laravolt.avatar.backgrounds' => 'string',
            'laravolt.avatar.border.size' => 'integer',
            'laravolt.avatar.border.color' => 'string',
            'laravolt.avatar.border.radius' => 'integer',
            'laravolt.avatar.theme' => 'string',
            'laravolt.avatar.themes.grayscale-light.backgrounds' => 'string',
            'laravolt.avatar.themes.grayscale-light.foregrounds' => 'string',
            'laravolt.avatar.themes.grayscale-dark.backgrounds' => 'string',
            'laravolt.avatar.themes.grayscale-dark.foregrounds' => 'string',
            'laravolt.avatar.themes.colorful.backgrounds' => 'string',
            'laravolt.avatar.themes.colorful.foregrounds' => 'string',
            'laravolt.avatar.themes.pastel.backgrounds' => 'string',
            'laravolt.avatar.themes.pastel.foregrounds' => 'string',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'string',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.single.replace_placeholders' => 'boolean',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.daily.replace_placeholders' => 'boolean',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.slack.replace_placeholders' => 'boolean',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.papertrail.processors' => 'string',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.stderr.processors' => 'string',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.syslog.facility' => 'integer',
            'logging.channels.syslog.replace_placeholders' => 'boolean',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.errorlog.replace_placeholders' => 'boolean',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.encryption' => 'NULL',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'string',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'string',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.connection' => 'NULL',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'NULL',
            'queue.connections.sqs.secret' => 'NULL',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'string',
            'sanctum.guard' => 'string',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'scout.driver' => 'string',
            'scout.prefix' => 'string',
            'scout.queue' => 'boolean',
            'scout.after_commit' => 'boolean',
            'scout.chunk.searchable' => 'integer',
            'scout.chunk.unsearchable' => 'integer',
            'scout.soft_delete' => 'boolean',
            'scout.identify' => 'boolean',
            'scout.algolia.id' => 'string',
            'scout.algolia.secret' => 'string',
            'scout.meilisearch.host' => 'string',
            'scout.meilisearch.key' => 'string',
            'scout.meilisearch.index-settings.App\Models\Product.filterableAttributes' => 'string',
            'scout.meilisearch.index-settings.App\Models\Product.sortableAttributes' => 'string',
            'scout.typesense.client-settings.api_key' => 'string',
            'scout.typesense.client-settings.nodes.0.host' => 'string',
            'scout.typesense.client-settings.nodes.0.port' => 'string',
            'scout.typesense.client-settings.nodes.0.path' => 'string',
            'scout.typesense.client-settings.nodes.0.protocol' => 'string',
            'scout.typesense.client-settings.nearest_node.host' => 'string',
            'scout.typesense.client-settings.nearest_node.port' => 'string',
            'scout.typesense.client-settings.nearest_node.path' => 'string',
            'scout.typesense.client-settings.nearest_node.protocol' => 'string',
            'scout.typesense.client-settings.connection_timeout_seconds' => 'integer',
            'scout.typesense.client-settings.healthcheck_interval_seconds' => 'integer',
            'scout.typesense.client-settings.num_retries' => 'integer',
            'scout.typesense.client-settings.retry_interval_seconds' => 'integer',
            'scout.typesense.model-settings' => 'array',
            'services.postmark.token' => 'NULL',
            'services.ses.key' => 'NULL',
            'services.ses.secret' => 'NULL',
            'services.ses.region' => 'string',
            'services.resend.key' => 'NULL',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'services.github.client_id' => 'NULL',
            'services.github.client_secret' => 'NULL',
            'services.github.redirect' => 'NULL',
            'services.google.client_id' => 'NULL',
            'services.google.client_secret' => 'NULL',
            'services.google.redirect' => 'NULL',
            'services.sdek.client_id' => 'NULL',
            'services.sdek.client_secret' => 'NULL',
            'services.boxberry.token' => 'NULL',
            'session.driver' => 'string',
            'session.lifetime' => 'string',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'string',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'string',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'string',
            'broadcasting.connections.reverb.secret' => 'string',
            'broadcasting.connections.reverb.app_id' => 'string',
            'broadcasting.connections.reverb.options.host' => 'string',
            'broadcasting.connections.reverb.options.port' => 'string',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'NULL',
            'broadcasting.connections.pusher.secret' => 'NULL',
            'broadcasting.connections.pusher.app_id' => 'NULL',
            'broadcasting.connections.pusher.options.cluster' => 'NULL',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'integer',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'view.paths' => 'string',
            'view.compiled' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'string',
            'hashing.bcrypt.verify' => 'boolean',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.argon.verify' => 'boolean',
            'hashing.rehash_on_login' => 'boolean',
            'dompdf.show_warnings' => 'boolean',
            'dompdf.public_path' => 'NULL',
            'dompdf.convert_entities' => 'boolean',
            'dompdf.options.font_dir' => 'string',
            'dompdf.options.font_cache' => 'string',
            'dompdf.options.temp_dir' => 'string',
            'dompdf.options.chroot' => 'string',
            'dompdf.options.allowed_protocols.data://.rules' => 'array',
            'dompdf.options.allowed_protocols.file://.rules' => 'array',
            'dompdf.options.allowed_protocols.http://.rules' => 'array',
            'dompdf.options.allowed_protocols.https://.rules' => 'array',
            'dompdf.options.artifactPathValidation' => 'NULL',
            'dompdf.options.log_output_file' => 'NULL',
            'dompdf.options.enable_font_subsetting' => 'boolean',
            'dompdf.options.pdf_backend' => 'string',
            'dompdf.options.default_media_type' => 'string',
            'dompdf.options.default_paper_size' => 'string',
            'dompdf.options.default_paper_orientation' => 'string',
            'dompdf.options.default_font' => 'string',
            'dompdf.options.dpi' => 'integer',
            'dompdf.options.enable_php' => 'boolean',
            'dompdf.options.enable_javascript' => 'boolean',
            'dompdf.options.enable_remote' => 'boolean',
            'dompdf.options.allowed_remote_hosts' => 'NULL',
            'dompdf.options.font_height_ratio' => 'double',
            'dompdf.options.enable_html5_parser' => 'boolean',
            'reverb.default' => 'string',
            'reverb.servers.reverb.host' => 'string',
            'reverb.servers.reverb.port' => 'integer',
            'reverb.servers.reverb.hostname' => 'string',
            'reverb.servers.reverb.options.tls' => 'array',
            'reverb.servers.reverb.max_request_size' => 'integer',
            'reverb.servers.reverb.scaling.enabled' => 'boolean',
            'reverb.servers.reverb.scaling.channel' => 'string',
            'reverb.servers.reverb.scaling.server.url' => 'NULL',
            'reverb.servers.reverb.scaling.server.host' => 'string',
            'reverb.servers.reverb.scaling.server.port' => 'string',
            'reverb.servers.reverb.scaling.server.username' => 'NULL',
            'reverb.servers.reverb.scaling.server.password' => 'NULL',
            'reverb.servers.reverb.scaling.server.database' => 'string',
            'reverb.servers.reverb.pulse_ingest_interval' => 'integer',
            'reverb.servers.reverb.telescope_ingest_interval' => 'integer',
            'reverb.apps.provider' => 'string',
            'reverb.apps.apps.0.key' => 'string',
            'reverb.apps.apps.0.secret' => 'string',
            'reverb.apps.apps.0.app_id' => 'string',
            'reverb.apps.apps.0.options.host' => 'string',
            'reverb.apps.apps.0.options.port' => 'string',
            'reverb.apps.apps.0.options.scheme' => 'string',
            'reverb.apps.apps.0.options.useTLS' => 'boolean',
            'reverb.apps.apps.0.allowed_origins' => 'string',
            'reverb.apps.apps.0.ping_interval' => 'integer',
            'reverb.apps.apps.0.activity_timeout' => 'integer',
            'reverb.apps.apps.0.max_message_size' => 'integer',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'string',
            'ide-helper.model_locations' => 'string',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'string',
            'ide-helper.extra.Session' => 'string',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'string',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'string',
        ]));


    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::mock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::partialMock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::instance(0), type(1));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::spy(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

            registerArgumentsSet('auth', );
        registerArgumentsSet('configs', 
'app.name','app.env','app.debug','app.url','app.frontend_url',
'app.asset_url','app.timezone','app.locale','app.fallback_locale','app.faker_locale',
'app.cipher','app.key','app.previous_keys','app.maintenance.driver','app.maintenance.store',
'app.providers','app.aliases.App','app.aliases.Arr','app.aliases.Artisan','app.aliases.Auth',
'app.aliases.Blade','app.aliases.Broadcast','app.aliases.Bus','app.aliases.Cache','app.aliases.Concurrency',
'app.aliases.Config','app.aliases.Context','app.aliases.Cookie','app.aliases.Crypt','app.aliases.Date',
'app.aliases.DB','app.aliases.Eloquent','app.aliases.Event','app.aliases.File','app.aliases.Gate',
'app.aliases.Hash','app.aliases.Http','app.aliases.Js','app.aliases.Lang','app.aliases.Log',
'app.aliases.Mail','app.aliases.Notification','app.aliases.Number','app.aliases.Password','app.aliases.Process',
'app.aliases.Queue','app.aliases.RateLimiter','app.aliases.Redirect','app.aliases.Request','app.aliases.Response',
'app.aliases.Route','app.aliases.Schedule','app.aliases.Schema','app.aliases.Session','app.aliases.Storage',
'app.aliases.Str','app.aliases.URL','app.aliases.Uri','app.aliases.Validator','app.aliases.View',
'app.aliases.Vite','auth.defaults.guard','auth.defaults.passwords','auth.guards.web.driver','auth.guards.web.provider',
'auth.guards.sanctum.driver','auth.guards.sanctum.provider','auth.providers.users.driver','auth.providers.users.model','auth.passwords.users.provider',
'auth.passwords.users.table','auth.passwords.users.expire','auth.passwords.users.throttle','auth.password_timeout','cache.default',
'cache.stores.array.driver','cache.stores.array.serialize','cache.stores.database.driver','cache.stores.database.connection','cache.stores.database.table',
'cache.stores.database.lock_connection','cache.stores.database.lock_table','cache.stores.file.driver','cache.stores.file.path','cache.stores.file.lock_path',
'cache.stores.memcached.driver','cache.stores.memcached.persistent_id','cache.stores.memcached.sasl','cache.stores.memcached.options','cache.stores.memcached.servers.0.host',
'cache.stores.memcached.servers.0.port','cache.stores.memcached.servers.0.weight','cache.stores.redis.driver','cache.stores.redis.connection','cache.stores.redis.lock_connection',
'cache.stores.dynamodb.driver','cache.stores.dynamodb.key','cache.stores.dynamodb.secret','cache.stores.dynamodb.region','cache.stores.dynamodb.table',
'cache.stores.dynamodb.endpoint','cache.stores.octane.driver','cache.prefix','cors.paths','cors.allowed_methods',
'cors.allowed_origins','cors.allowed_origins_patterns','cors.allowed_headers','cors.exposed_headers','cors.max_age',
'cors.supports_credentials','database.default','database.connections.sqlite.driver','database.connections.sqlite.url','database.connections.sqlite.database',
'database.connections.sqlite.prefix','database.connections.sqlite.foreign_key_constraints','database.connections.sqlite.busy_timeout','database.connections.sqlite.journal_mode','database.connections.sqlite.synchronous',
'database.connections.mysql.driver','database.connections.mysql.url','database.connections.mysql.host','database.connections.mysql.port','database.connections.mysql.database',
'database.connections.mysql.username','database.connections.mysql.password','database.connections.mysql.unix_socket','database.connections.mysql.charset','database.connections.mysql.collation',
'database.connections.mysql.prefix','database.connections.mysql.prefix_indexes','database.connections.mysql.strict','database.connections.mysql.engine','database.connections.mysql.options',
'database.connections.mariadb.driver','database.connections.mariadb.url','database.connections.mariadb.host','database.connections.mariadb.port','database.connections.mariadb.database',
'database.connections.mariadb.username','database.connections.mariadb.password','database.connections.mariadb.unix_socket','database.connections.mariadb.charset','database.connections.mariadb.collation',
'database.connections.mariadb.prefix','database.connections.mariadb.prefix_indexes','database.connections.mariadb.strict','database.connections.mariadb.engine','database.connections.mariadb.options',
'database.connections.pgsql.driver','database.connections.pgsql.url','database.connections.pgsql.host','database.connections.pgsql.port','database.connections.pgsql.database',
'database.connections.pgsql.username','database.connections.pgsql.password','database.connections.pgsql.charset','database.connections.pgsql.prefix','database.connections.pgsql.prefix_indexes',
'database.connections.pgsql.search_path','database.connections.pgsql.sslmode','database.connections.sqlsrv.driver','database.connections.sqlsrv.url','database.connections.sqlsrv.host',
'database.connections.sqlsrv.port','database.connections.sqlsrv.database','database.connections.sqlsrv.username','database.connections.sqlsrv.password','database.connections.sqlsrv.charset',
'database.connections.sqlsrv.prefix','database.connections.sqlsrv.prefix_indexes','database.migrations.table','database.migrations.update_date_on_publish','database.redis.client',
'database.redis.options.cluster','database.redis.options.prefix','database.redis.default.url','database.redis.default.host','database.redis.default.username',
'database.redis.default.password','database.redis.default.port','database.redis.default.database','database.redis.cache.url','database.redis.cache.host',
'database.redis.cache.username','database.redis.cache.password','database.redis.cache.port','database.redis.cache.database','filesystems.default',
'filesystems.disks.local.driver','filesystems.disks.local.root','filesystems.disks.local.serve','filesystems.disks.local.throw','filesystems.disks.public.driver',
'filesystems.disks.public.root','filesystems.disks.public.url','filesystems.disks.public.visibility','filesystems.disks.public.throw','filesystems.disks.s3.driver',
'filesystems.disks.s3.key','filesystems.disks.s3.secret','filesystems.disks.s3.region','filesystems.disks.s3.bucket','filesystems.disks.s3.url',
'filesystems.disks.s3.endpoint','filesystems.disks.s3.use_path_style_endpoint','filesystems.disks.s3.throw','filesystems.links./var/www/html/public/storage','fortify.guard',
'fortify.middleware','fortify.auth_middleware','fortify.passwords','fortify.username','fortify.email',
'fortify.views','fortify.home','fortify.prefix','fortify.domain','fortify.lowercase_usernames',
'fortify.limiters.login','fortify.limiters.two-factor','fortify.paths.login','fortify.paths.logout','fortify.paths.password.request',
'fortify.paths.password.reset','fortify.paths.password.email','fortify.paths.password.update','fortify.paths.password.confirm','fortify.paths.password.confirmation',
'fortify.paths.register','fortify.paths.verification.notice','fortify.paths.verification.verify','fortify.paths.verification.send','fortify.paths.user-profile-information.update',
'fortify.paths.user-password.update','fortify.paths.two-factor.login','fortify.paths.two-factor.enable','fortify.paths.two-factor.confirm','fortify.paths.two-factor.disable',
'fortify.paths.two-factor.qr-code','fortify.paths.two-factor.secret-key','fortify.paths.two-factor.recovery-codes','fortify.redirects.login','fortify.redirects.logout',
'fortify.redirects.password-confirmation','fortify.redirects.register','fortify.redirects.email-verification','fortify.redirects.password-reset','fortify.features',
'laravolt.avatar.driver','laravolt.avatar.generator','laravolt.avatar.ascii','laravolt.avatar.shape','laravolt.avatar.width',
'laravolt.avatar.height','laravolt.avatar.chars','laravolt.avatar.fontSize','laravolt.avatar.uppercase','laravolt.avatar.rtl',
'laravolt.avatar.fonts','laravolt.avatar.foregrounds','laravolt.avatar.backgrounds','laravolt.avatar.border.size','laravolt.avatar.border.color',
'laravolt.avatar.border.radius','laravolt.avatar.theme','laravolt.avatar.themes.grayscale-light.backgrounds','laravolt.avatar.themes.grayscale-light.foregrounds','laravolt.avatar.themes.grayscale-dark.backgrounds',
'laravolt.avatar.themes.grayscale-dark.foregrounds','laravolt.avatar.themes.colorful.backgrounds','laravolt.avatar.themes.colorful.foregrounds','laravolt.avatar.themes.pastel.backgrounds','laravolt.avatar.themes.pastel.foregrounds',
'logging.default','logging.deprecations.channel','logging.deprecations.trace','logging.channels.stack.driver','logging.channels.stack.channels',
'logging.channels.stack.ignore_exceptions','logging.channels.single.driver','logging.channels.single.path','logging.channels.single.level','logging.channels.single.replace_placeholders',
'logging.channels.daily.driver','logging.channels.daily.path','logging.channels.daily.level','logging.channels.daily.days','logging.channels.daily.replace_placeholders',
'logging.channels.slack.driver','logging.channels.slack.url','logging.channels.slack.username','logging.channels.slack.emoji','logging.channels.slack.level',
'logging.channels.slack.replace_placeholders','logging.channels.papertrail.driver','logging.channels.papertrail.level','logging.channels.papertrail.handler','logging.channels.papertrail.handler_with.host',
'logging.channels.papertrail.handler_with.port','logging.channels.papertrail.handler_with.connectionString','logging.channels.papertrail.processors','logging.channels.stderr.driver','logging.channels.stderr.level',
'logging.channels.stderr.handler','logging.channels.stderr.formatter','logging.channels.stderr.with.stream','logging.channels.stderr.processors','logging.channels.syslog.driver',
'logging.channels.syslog.level','logging.channels.syslog.facility','logging.channels.syslog.replace_placeholders','logging.channels.errorlog.driver','logging.channels.errorlog.level',
'logging.channels.errorlog.replace_placeholders','logging.channels.null.driver','logging.channels.null.handler','logging.channels.emergency.path','mail.default',
'mail.mailers.smtp.transport','mail.mailers.smtp.url','mail.mailers.smtp.host','mail.mailers.smtp.port','mail.mailers.smtp.encryption',
'mail.mailers.smtp.username','mail.mailers.smtp.password','mail.mailers.smtp.timeout','mail.mailers.smtp.local_domain','mail.mailers.ses.transport',
'mail.mailers.postmark.transport','mail.mailers.resend.transport','mail.mailers.sendmail.transport','mail.mailers.sendmail.path','mail.mailers.log.transport',
'mail.mailers.log.channel','mail.mailers.array.transport','mail.mailers.failover.transport','mail.mailers.failover.mailers','mail.mailers.roundrobin.transport',
'mail.mailers.roundrobin.mailers','mail.from.address','mail.from.name','mail.markdown.theme','mail.markdown.paths',
'queue.default','queue.connections.sync.driver','queue.connections.database.driver','queue.connections.database.connection','queue.connections.database.table',
'queue.connections.database.queue','queue.connections.database.retry_after','queue.connections.database.after_commit','queue.connections.beanstalkd.driver','queue.connections.beanstalkd.host',
'queue.connections.beanstalkd.queue','queue.connections.beanstalkd.retry_after','queue.connections.beanstalkd.block_for','queue.connections.beanstalkd.after_commit','queue.connections.sqs.driver',
'queue.connections.sqs.key','queue.connections.sqs.secret','queue.connections.sqs.prefix','queue.connections.sqs.queue','queue.connections.sqs.suffix',
'queue.connections.sqs.region','queue.connections.sqs.after_commit','queue.connections.redis.driver','queue.connections.redis.connection','queue.connections.redis.queue',
'queue.connections.redis.retry_after','queue.connections.redis.block_for','queue.connections.redis.after_commit','queue.batching.database','queue.batching.table',
'queue.failed.driver','queue.failed.database','queue.failed.table','sanctum.stateful','sanctum.guard',
'sanctum.expiration','sanctum.token_prefix','sanctum.middleware.authenticate_session','sanctum.middleware.encrypt_cookies','sanctum.middleware.validate_csrf_token',
'scout.driver','scout.prefix','scout.queue','scout.after_commit','scout.chunk.searchable',
'scout.chunk.unsearchable','scout.soft_delete','scout.identify','scout.algolia.id','scout.algolia.secret',
'scout.meilisearch.host','scout.meilisearch.key','scout.meilisearch.index-settings.App\\Models\\Product.filterableAttributes','scout.meilisearch.index-settings.App\\Models\\Product.sortableAttributes','scout.typesense.client-settings.api_key',
'scout.typesense.client-settings.nodes.0.host','scout.typesense.client-settings.nodes.0.port','scout.typesense.client-settings.nodes.0.path','scout.typesense.client-settings.nodes.0.protocol','scout.typesense.client-settings.nearest_node.host',
'scout.typesense.client-settings.nearest_node.port','scout.typesense.client-settings.nearest_node.path','scout.typesense.client-settings.nearest_node.protocol','scout.typesense.client-settings.connection_timeout_seconds','scout.typesense.client-settings.healthcheck_interval_seconds',
'scout.typesense.client-settings.num_retries','scout.typesense.client-settings.retry_interval_seconds','scout.typesense.model-settings','services.postmark.token','services.ses.key',
'services.ses.secret','services.ses.region','services.resend.key','services.slack.notifications.bot_user_oauth_token','services.slack.notifications.channel',
'services.github.client_id','services.github.client_secret','services.github.redirect','services.google.client_id','services.google.client_secret',
'services.google.redirect','services.sdek.client_id','services.sdek.client_secret','services.boxberry.token','session.driver',
'session.lifetime','session.expire_on_close','session.encrypt','session.files','session.connection',
'session.table','session.store','session.lottery','session.cookie','session.path',
'session.domain','session.secure','session.http_only','session.same_site','session.partitioned',
'broadcasting.default','broadcasting.connections.reverb.driver','broadcasting.connections.reverb.key','broadcasting.connections.reverb.secret','broadcasting.connections.reverb.app_id',
'broadcasting.connections.reverb.options.host','broadcasting.connections.reverb.options.port','broadcasting.connections.reverb.options.scheme','broadcasting.connections.reverb.options.useTLS','broadcasting.connections.reverb.client_options',
'broadcasting.connections.pusher.driver','broadcasting.connections.pusher.key','broadcasting.connections.pusher.secret','broadcasting.connections.pusher.app_id','broadcasting.connections.pusher.options.cluster',
'broadcasting.connections.pusher.options.host','broadcasting.connections.pusher.options.port','broadcasting.connections.pusher.options.scheme','broadcasting.connections.pusher.options.encrypted','broadcasting.connections.pusher.options.useTLS',
'broadcasting.connections.pusher.client_options','broadcasting.connections.ably.driver','broadcasting.connections.ably.key','broadcasting.connections.log.driver','broadcasting.connections.null.driver',
'concurrency.default','view.paths','view.compiled','hashing.driver','hashing.bcrypt.rounds',
'hashing.bcrypt.verify','hashing.argon.memory','hashing.argon.threads','hashing.argon.time','hashing.argon.verify',
'hashing.rehash_on_login','dompdf.show_warnings','dompdf.public_path','dompdf.convert_entities','dompdf.options.font_dir',
'dompdf.options.font_cache','dompdf.options.temp_dir','dompdf.options.chroot','dompdf.options.allowed_protocols.data://.rules','dompdf.options.allowed_protocols.file://.rules',
'dompdf.options.allowed_protocols.http://.rules','dompdf.options.allowed_protocols.https://.rules','dompdf.options.artifactPathValidation','dompdf.options.log_output_file','dompdf.options.enable_font_subsetting',
'dompdf.options.pdf_backend','dompdf.options.default_media_type','dompdf.options.default_paper_size','dompdf.options.default_paper_orientation','dompdf.options.default_font',
'dompdf.options.dpi','dompdf.options.enable_php','dompdf.options.enable_javascript','dompdf.options.enable_remote','dompdf.options.allowed_remote_hosts',
'dompdf.options.font_height_ratio','dompdf.options.enable_html5_parser','reverb.default','reverb.servers.reverb.host','reverb.servers.reverb.port',
'reverb.servers.reverb.hostname','reverb.servers.reverb.options.tls','reverb.servers.reverb.max_request_size','reverb.servers.reverb.scaling.enabled','reverb.servers.reverb.scaling.channel',
'reverb.servers.reverb.scaling.server.url','reverb.servers.reverb.scaling.server.host','reverb.servers.reverb.scaling.server.port','reverb.servers.reverb.scaling.server.username','reverb.servers.reverb.scaling.server.password',
'reverb.servers.reverb.scaling.server.database','reverb.servers.reverb.pulse_ingest_interval','reverb.servers.reverb.telescope_ingest_interval','reverb.apps.provider','reverb.apps.apps.0.key',
'reverb.apps.apps.0.secret','reverb.apps.apps.0.app_id','reverb.apps.apps.0.options.host','reverb.apps.apps.0.options.port','reverb.apps.apps.0.options.scheme',
'reverb.apps.apps.0.options.useTLS','reverb.apps.apps.0.allowed_origins','reverb.apps.apps.0.ping_interval','reverb.apps.apps.0.activity_timeout','reverb.apps.apps.0.max_message_size',
'ide-helper.filename','ide-helper.models_filename','ide-helper.meta_filename','ide-helper.include_fluent','ide-helper.include_factory_builders',
'ide-helper.write_model_magic_where','ide-helper.write_model_external_builder_methods','ide-helper.write_model_relation_count_properties','ide-helper.write_eloquent_model_mixins','ide-helper.include_helpers',
'ide-helper.helper_files','ide-helper.model_locations','ide-helper.ignored_models','ide-helper.model_hooks','ide-helper.extra.Eloquent',
'ide-helper.extra.Session','ide-helper.magic','ide-helper.interfaces','ide-helper.model_camel_case_properties','ide-helper.type_overrides.integer',
'ide-helper.type_overrides.boolean','ide-helper.include_class_docblocks','ide-helper.force_fqn','ide-helper.use_generics_annotations','ide-helper.additional_relation_types',
'ide-helper.additional_relation_return_types','ide-helper.enforce_nullable_relationships','ide-helper.post_migrate','ide-helper.macroable_traits','tinker.commands',
'tinker.alias','tinker.dont_alias',);
        registerArgumentsSet('middleware', 
'web','api','auth','auth.basic','auth.session',
'cache.headers','can','guest','password.confirm','precognitive',
'signed','throttle','verified','admin',);
        registerArgumentsSet('routes', 
'login.store','logout','password.email','password.update','register.store',
'verification.verify','verification.send','user-profile-information.update','user-password.update','password.confirmation',
'password.confirm.store','two-factor.login.store','two-factor.enable','two-factor.confirm','two-factor.disable',
'two-factor.qr-code','two-factor.secret-key','two-factor.recovery-codes','sanctum.csrf-cookie',
'api.v1.users.index','api.v1.users.store','api.v1.users.show','api.v1.users.update','api.v1.users.destroy',
'api.v1.users.verify','api.v1.statistics.overview','api.v1.statistics.sales.lastSevenDays','api.v1.backup.list','api.v1.backup.create',
'api.v1.backup.delete','api.v1.log.','api.v1.log.','api.v1.accounts.index','api.v1.accounts.store',
'api.v1.accounts.show','api.v1.accounts.update','api.v1.accounts.destroy','api.v1.settings.show','api.v1.settings.update',
'api.v1.templates.show','api.v1.templates.update','api.v1.products.search','api.v1.products.best','api.v1.products.new',
'api.v1.products.popular','api.v1.products.updateSearchIndexes','api.v1.products.index','api.v1.products.store','api.v1.products.show',
'api.v1.products.update','api.v1.products.destroy','api.v1.products.reviews.index','api.v1.products.reviews.store','api.v1.reviews.show',
'api.v1.reviews.update','api.v1.reviews.destroy','api.v1.products.reviews.reactions.store','api.v1.variations.index','api.v1.orders.latest',
'api.v1.orders.invoice','api.v1.orders.index','api.v1.orders.store','api.v1.orders.show','api.v1.orders.update',
'api.v1.reviews.index','api.v1.reviews.store','api.v1.messages.index','api.v1.messages.store','api.v1.messages.show',
'api.v1.messages.update','api.v1.messages.destroy','api.','api.','api.',
'api.user.notifications','api.user.notifications.read','api.oauth.redirect','api.oauth.callback','storage.local',);
        registerArgumentsSet('views', 
'mail.account-deleted','mail.account-password-reset','mail.account-registered','pdf.invoice','laravel-exceptions-renderer::components.card',
'laravel-exceptions-renderer::components.context','laravel-exceptions-renderer::components.editor','laravel-exceptions-renderer::components.header','laravel-exceptions-renderer::components.icons.chevron-down','laravel-exceptions-renderer::components.icons.chevron-up',
'laravel-exceptions-renderer::components.icons.computer-desktop','laravel-exceptions-renderer::components.icons.moon','laravel-exceptions-renderer::components.icons.sun','laravel-exceptions-renderer::components.layout','laravel-exceptions-renderer::components.navigation',
'laravel-exceptions-renderer::components.theme-switcher','laravel-exceptions-renderer::components.trace','laravel-exceptions-renderer::components.trace-and-editor','laravel-exceptions-renderer::show','laravel-exceptions::401',
'laravel-exceptions::402','laravel-exceptions::403','laravel-exceptions::404','laravel-exceptions::419','laravel-exceptions::429',
'laravel-exceptions::500','laravel-exceptions::503','laravel-exceptions::layout','laravel-exceptions::minimal','notifications::email',
'pagination::bootstrap-4','pagination::bootstrap-5','pagination::default','pagination::semantic-ui','pagination::simple-bootstrap-4',
'pagination::simple-bootstrap-5','pagination::simple-default','pagination::simple-tailwind','pagination::tailwind',);
        registerArgumentsSet('translations', 
'auth.failed','auth.password','auth.throttle','pagination.previous','pagination.next',
'passwords.reset','passwords.sent','passwords.throttled','passwords.token','passwords.user',
'validation.accepted','validation.accepted_if','validation.active_url','validation.after','validation.after_or_equal',
'validation.alpha','validation.alpha_dash','validation.alpha_num','validation.array','validation.ascii',
'validation.before','validation.before_or_equal','validation.between.array','validation.between.file','validation.between.numeric',
'validation.between.string','validation.boolean','validation.can','validation.confirmed','validation.contains',
'validation.current_password','validation.date','validation.date_equals','validation.date_format','validation.decimal',
'validation.declined','validation.declined_if','validation.different','validation.digits','validation.digits_between',
'validation.dimensions','validation.distinct','validation.doesnt_end_with','validation.doesnt_start_with','validation.email',
'validation.ends_with','validation.enum','validation.exists','validation.extensions','validation.file',
'validation.filled','validation.gt.array','validation.gt.file','validation.gt.numeric','validation.gt.string',
'validation.gte.array','validation.gte.file','validation.gte.numeric','validation.gte.string','validation.hex_color',
'validation.image','validation.in','validation.in_array','validation.integer','validation.ip',
'validation.ipv4','validation.ipv6','validation.json','validation.list','validation.lowercase',
'validation.lt.array','validation.lt.file','validation.lt.numeric','validation.lt.string','validation.lte.array',
'validation.lte.file','validation.lte.numeric','validation.lte.string','validation.mac_address','validation.max.array',
'validation.max.file','validation.max.numeric','validation.max.string','validation.max_digits','validation.mimes',
'validation.mimetypes','validation.min.array','validation.min.file','validation.min.numeric','validation.min.string',
'validation.min_digits','validation.missing','validation.missing_if','validation.missing_unless','validation.missing_with',
'validation.missing_with_all','validation.multiple_of','validation.not_in','validation.not_regex','validation.numeric',
'validation.password.letters','validation.password.mixed','validation.password.numbers','validation.password.symbols','validation.password.uncompromised',
'validation.present','validation.present_if','validation.present_unless','validation.present_with','validation.present_with_all',
'validation.prohibited','validation.prohibited_if','validation.prohibited_unless','validation.prohibits','validation.regex',
'validation.required','validation.required_array_keys','validation.required_if','validation.required_if_accepted','validation.required_if_declined',
'validation.required_unless','validation.required_with','validation.required_with_all','validation.required_without','validation.required_without_all',
'validation.same','validation.size.array','validation.size.file','validation.size.numeric','validation.size.string',
'validation.starts_with','validation.string','validation.timezone','validation.unique','validation.uploaded',
'validation.uppercase','validation.url','validation.ulid','validation.uuid','validation.custom.attribute-name.rule-name',);
        registerArgumentsSet('env', 
'APP_NAME','APP_ENV','APP_KEY','APP_DEBUG','APP_TIMEZONE',
'APP_PORT','APP_URL','FRONTEND_URL','APP_LOCALE','APP_FALLBACK_LOCALE',
'APP_FAKER_LOCALE','APP_MAINTENANCE_DRIVER','APP_MAINTENANCE_STORE','BCRYPT_ROUNDS','LOG_CHANNEL',
'LOG_STACK','LOG_DEPRECATIONS_CHANNEL','LOG_LEVEL','DB_CONNECTION','DB_HOST',
'DB_PORT','DB_DATABASE','DB_USERNAME','DB_PASSWORD','SESSION_DRIVER',
'SESSION_LIFETIME','SESSION_ENCRYPT','SESSION_PATH','SESSION_DOMAIN','SANCTUM_STATEFUL_DOMAINS',
'BROADCAST_CONNECTION','FILESYSTEM_DISK','QUEUE_CONNECTION','CACHE_STORE','CACHE_PREFIX',
'REDIS_CLIENT','REDIS_HOST','REDIS_PASSWORD','REDIS_PORT','MAIL_MAILER',
'MAIL_HOST','MAIL_PORT','MAIL_USERNAME','MAIL_PASSWORD','MAIL_ENCRYPTION',
'MAIL_FROM_ADDRESS','MAIL_FROM_NAME','SCOUT_DRIVER','SCOUT_QUEUE','MEILISEARCH_HOST',
'MEILISEARCH_KEY','MATOMO_PORT','CERTBOT_DOMAINS','CERTBOT_EMAIL','REVERB_APP_ID',
'REVERB_APP_KEY','REVERB_APP_SECRET','REVERB_HOST','REVERB_PORT','REVERB_SCHEME',
'VITE_REVERB_APP_KEY','VITE_REVERB_HOST','VITE_REVERB_PORT','VITE_REVERB_SCHEME',);
        
                expectedArguments(\Illuminate\Support\Facades\Gate::has(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::allows(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::denies(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::check(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::any(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::none(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::authorize(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::inspect(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Support\Facades\Route::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cant(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Contracts\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Config\Repository::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::push(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::push(), 0, argumentsSet('configs'));
                expectedArguments(\Illuminate\Support\Facades\Route::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Support\Facades\Route::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::withoutMiddleware(), 0, argumentsSet('middleware'));
                expectedArguments(\route(), 0, argumentsSet('routes'));
    expectedArguments(\to_route(), 0, argumentsSet('routes'));
    expectedArguments(\signedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\Illuminate\Support\Facades\Redirect::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::temporarySignedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\view(), 0, argumentsSet('views'));
                expectedArguments(\Illuminate\Support\Facades\View::make(), 0, argumentsSet('views'));
    expectedArguments(\Illuminate\View\Factory::make(), 0, argumentsSet('views'));
                expectedArguments(\__(), 0, argumentsSet('translations'));
    expectedArguments(\trans(), 0, argumentsSet('translations'));
                expectedArguments(\Illuminate\Contracts\Translation\Translator::get(), 0, argumentsSet('translations'));
                expectedArguments(\env(), 0, argumentsSet('env'));
                expectedArguments(\Illuminate\Support\Env::get(), 0, argumentsSet('env'));
            
}
